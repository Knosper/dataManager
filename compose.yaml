version: '3.8'

networks:
  internal:
    driver: bridge

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    expose:
      - '5432'
    ports:
      - '5432:5432'
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  cpp-app:
    container_name: cpp-app
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - './backend:/app'
      - '/app/node_modules'
    depends_on:
      - postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    networks:
      - internal

  #frontend:
  #  container_name: react-frontend
  #  build:
  #    context: ./frontend
  #    dockerfile: Dockerfile
  #  volumes:
  #    - './frontend:/app'
  #    - '/app/node_modules'
  #  ports:
  #    - '3000:3000'
  #  environment:
  #    - NODE_ENV=development
  #  networks:
  #    - internal
  #  depends_on:
  #    - cpp-app # if the frontend depends on the backend service being ready
  #  restart: unless-stopped